// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/draw.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace gRPCClient {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Draw
  {
    static readonly string __ServiceName = "draw.Draw";

    static readonly grpc::Marshaller<global::gRPCClient.DrawPointRequest> __Marshaller_draw_DrawPointRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCClient.DrawPointRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCClient.DrawPoint> __Marshaller_draw_DrawPoint = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCClient.DrawPoint.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCClient.IdRequest> __Marshaller_draw_IdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCClient.IdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCClient.IdResponse> __Marshaller_draw_IdResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCClient.IdResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::gRPCClient.DrawPointRequest, global::gRPCClient.DrawPoint> __Method_DrawPoints = new grpc::Method<global::gRPCClient.DrawPointRequest, global::gRPCClient.DrawPoint>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "DrawPoints",
        __Marshaller_draw_DrawPointRequest,
        __Marshaller_draw_DrawPoint);

    static readonly grpc::Method<global::gRPCClient.IdRequest, global::gRPCClient.IdResponse> __Method_ReceiveId = new grpc::Method<global::gRPCClient.IdRequest, global::gRPCClient.IdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReceiveId",
        __Marshaller_draw_IdRequest,
        __Marshaller_draw_IdResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPCClient.DrawReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Draw</summary>
    public partial class DrawClient : grpc::ClientBase<DrawClient>
    {
      /// <summary>Creates a new client for Draw</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DrawClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Draw that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DrawClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DrawClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DrawClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncDuplexStreamingCall<global::gRPCClient.DrawPointRequest, global::gRPCClient.DrawPoint> DrawPoints(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DrawPoints(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::gRPCClient.DrawPointRequest, global::gRPCClient.DrawPoint> DrawPoints(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_DrawPoints, null, options);
      }
      public virtual global::gRPCClient.IdResponse ReceiveId(global::gRPCClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReceiveId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCClient.IdResponse ReceiveId(global::gRPCClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReceiveId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCClient.IdResponse> ReceiveIdAsync(global::gRPCClient.IdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReceiveIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCClient.IdResponse> ReceiveIdAsync(global::gRPCClient.IdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReceiveId, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DrawClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DrawClient(configuration);
      }
    }

  }
}
#endregion
